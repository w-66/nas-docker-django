"""
Django settings for django_www project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_%)_m*2*ifn-05&sjx@r#3^9teck4cdsmodc&irmy47%)paxj_'
 
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition
# 这里包括了会在你项目中启用的所有 Django 应用
INSTALLED_APPS = [
    'django.contrib.admin',        # 自带应用 自带的admin管理 ; Django 会自动在每个应用程序中寻找 admin 模块并导入它。
    'django.contrib.auth',         # 自带应用 认证授权系统 admin管理 依赖
    'django.contrib.contenttypes', # 自带应用 内容类型框架 admin管理 依赖
    'django.contrib.sessions',     # 自带应用 会话框架 admin管理 依赖
    'django.contrib.messages',     # 自带应用 消息框架 admin管理 依赖
    'django.contrib.staticfiles',  # 自带应用 管理静态文件的框架
    'app01',                       # 自建的app01 入门学习
    'app02',                       # 自建的app02 学习
    'polls',                       # Django官方文档入门学习教程案例
    'demo',                        # 自建app 学习时的demo与案例等
    'blog',                        # 个人信息页
    'tagsystem',                   # 标签系统
    'editormd'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # 自带admin管理 相关
    'django.contrib.messages.middleware.MessageMiddleware',     # 自带admin管理 相关
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'app01.middleware.auth.Auth',                      # 自建的admin管理页面，暂时弃用
    # 'app01.middleware.auth.AuthenticationMiddleware',
]

ROOT_URLCONF = 'django_www.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],   # 你的模板文件路径(默认优先在app中查找)
        'APP_DIRS': True,   # 这一选项将会让 DjangoTemplates 在每个 INSTALLED_APPS 文件夹中寻找 "templates" 子目录。
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',             
                'django.template.context_processors.request',           # 自带admin管理 相关
                'django.contrib.auth.context_processors.auth',          # 自带admin管理 相关
                'django.contrib.messages.context_processors.messages',  # 自带admin管理 相关
                'django.template.context_processors.static',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_www.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'blog_django',
        'USER': 'django',
        'PASSWORD': 'asdf;lkjdlmmdjango',
        'HOST': 'mysql5.7.39',
        'PORT': 3306,
    },
    'second_db':{
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'person',
        'USER': 'person',
        'PASSWORD': 'asdf;lkjdlmmperson',
        'HOST': 'mysql5.7.39',
        'PORT': 3306,
    }
}



# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

# 一个布尔值，用于指定是否应该启用 Django 的翻译系统。这提供了一个关闭翻译系统的方法，以保证性能。如果设置为 False，Django 会进行一些优化，以避免加载翻译机制。
USE_I18N = True
# 一个布尔值，用于指定是否默认启用数据的本地化格式。如果设置为 True，例如，Django 将使用当前语言的格式来显示数字和日期。
USE_L10N = True
# 当 USE_TZ 为 False 时，这是 Django 存储所有日期时间的时区。当 USE_TZ 为 True 时，这是 Django 在模板中显示日期时间和解释表单中输入的日期时间的默认时区。
USE_TZ = False

# 开启媒体存储路径 
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
# 默认优先在app中查找静态资源
STATIC_URL = '/static/'

STATICFILES_DIRS = [ BASE_DIR / "static" ]
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


